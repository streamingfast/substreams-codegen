{
  "generator": "evm-events-calls",
  "state": {
    "name": "bayc",
    "chainName": "mainnet",
    "contracts": [
      {
        "name": "bayc",
        "trackEvents": true,
        "trackCalls": true,
        "rawAbi": [
          {
            "inputs": [
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              },
              {
                "internalType": "string",
                "name": "symbol",
                "type": "string"
              },
              {
                "internalType": "uint256",
                "name": "maxNftSupply",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "saleStart",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "approved",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "approved",
                "type": "bool"
              }
            ],
            "name": "ApprovalForAll",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "BAYC_PROVENANCE",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "MAX_APES",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "REVEAL_TIMESTAMP",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "apePrice",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "baseURI",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "emergencySetStartingIndexBlock",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "flipSaleState",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "getApproved",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              }
            ],
            "name": "isApprovedForAll",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "maxApePurchase",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "numberOfTokens",
                "type": "uint256"
              }
            ],
            "name": "mintApe",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "ownerOf",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "reserveApes",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "_data",
                "type": "bytes"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "saleIsActive",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "approved",
                "type": "bool"
              }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "string",
                "name": "baseURI",
                "type": "string"
              }
            ],
            "name": "setBaseURI",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "string",
                "name": "provenanceHash",
                "type": "string"
              }
            ],
            "name": "setProvenanceHash",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "revealTimeStamp",
                "type": "uint256"
              }
            ],
            "name": "setRevealTimestamp",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "setStartingIndex",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "startingIndex",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "startingIndexBlock",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "interfaceId",
                "type": "bytes4"
              }
            ],
            "name": "supportsInterface",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "index",
                "type": "uint256"
              }
            ],
            "name": "tokenByIndex",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "index",
                "type": "uint256"
              }
            ],
            "name": "tokenOfOwnerByIndex",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "tokenURI",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "Abi": {},
        "address": "0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d",
        "initialBlock": 12287507,
        "trackFactory": false,
        "factoryCreationEvent": "",
        "factoryCreationEventFieldIdx": null
      }
    ],
    "dynamic_contracts": null,
    "confirm_enough_contracts": true,
    "ProjectFiles": {
      ".gitignore": "ZW50aXRpZXMvZGV2LWVudmlyb25tZW50L2RhdGEvCm5vZGVfbW9kdWxlcy8K",
      "Cargo.toml": "W3BhY2thZ2VdCm5hbWUgPSAiYmF5YyIKdmVyc2lvbiA9ICIwLjAuMSIKZWRpdGlvbiA9ICIyMDIxIgoKW2xpYl0KbmFtZSA9ICJzdWJzdHJlYW1zIgpjcmF0ZS10eXBlID0gWyJjZHlsaWIiXQoKW2RlcGVuZGVuY2llc10KZXRoYWJpID0gIjE3IgpoZXgtbGl0ZXJhbCA9ICIwLjMuNCIKbnVtLWJpZ2ludCA9ICIwLjQiCm51bS10cmFpdHMgPSAiMC4yLjE1Igpwcm9zdCA9ICIwLjExIgpwcm9zdC10eXBlcyA9ICIwLjExIgpzdWJzdHJlYW1zID0gIjAuNS4yMSIKc3Vic3RyZWFtcy1ldGhlcmV1bSA9ICIwLjkiCnN1YnN0cmVhbXMtZGF0YWJhc2UtY2hhbmdlID0gIjEiCnN1YnN0cmVhbXMtZW50aXR5LWNoYW5nZSA9ICIxIgoKIyBSZXF1aXJlZCBzbyB0aGF0IGV0aGFiaSA+IGV0aGVyZXVtLXR5cGVzIGJ1aWxkIGNvcnJlY3RseSB1bmRlciB3YXNtMzItdW5rbm93bi11bmtub3duClt0YXJnZXQud2FzbTMyLXVua25vd24tdW5rbm93bi5kZXBlbmRlbmNpZXNdCmdldHJhbmRvbSA9IHsgdmVyc2lvbiA9ICIwLjIiLCBmZWF0dXJlcyA9IFsiY3VzdG9tIl0gfQoKW2J1aWxkLWRlcGVuZGVuY2llc10KYW55aG93ID0gIjEiCnN1YnN0cmVhbXMtZXRoZXJldW0gPSAiMC45IgpyZWdleCA9ICIxLjgiCgpbcHJvZmlsZS5yZWxlYXNlXQpsdG8gPSB0cnVlCm9wdC1sZXZlbCA9ICdzJwpzdHJpcCA9ICJkZWJ1Z2luZm8iCg==",
      "README.md": "IyBFVk0gU3Vic3RyZWFtcwoKIyMgQnVpbGQgeW91ciBTdWJzdHJlYW1zCgpgYGBiYXNoCnN1YnN0cmVhbXMgYnVpbGQKYGBgCgojIyBBdXRoZW50aWNhdGUKClRvIHJ1biB5b3VyIFN1YnN0cmVhbXMgeW91IHdpbGwgbmVlZCB0byBbYXV0aGVudGljYXRlXShodHRwczovL3N1YnN0cmVhbXMuc3RyZWFtaW5nZmFzdC5pby9kb2N1bWVudGF0aW9uL2NvbnN1bWUvYXV0aGVudGljYXRpb24pIHlvdXJzZWxmLgoKYGBgYmFzaApzdWJzdHJlYW1zIGF1dGgKYGBgCgojIyBSdW4geW91ciBTdWJzdHJlYW1zCgpgYGBiYXNoCnN1YnN0cmVhbXMgZ3VpCmBgYAo=",
      "abi/bayc_contract.abi.json": "",
      "build.rs": "dXNlIGFueWhvdzo6e09rLCBSZXN1bHR9Owp1c2UgcmVnZXg6OlJlZ2V4Owp1c2Ugc3Vic3RyZWFtc19ldGhlcmV1bTo6QWJpZ2VuOwp1c2Ugc3RkOjpmczsKCmZuIG1haW4oKSAtPiBSZXN1bHQ8KCksIGFueWhvdzo6RXJyb3I+IHsKICAgIGxldCBmaWxlX25hbWVzID0gWwogICAgICAgICJhYmkvYmF5Y19jb250cmFjdC5hYmkuanNvbiIsCiAgICBdOwogICAgbGV0IGZpbGVfb3V0cHV0X25hbWVzID0gWwogICAgICAgICJzcmMvYWJpL2JheWNfY29udHJhY3QucnMiLAogICAgXTsKCiAgICBsZXQgbXV0IGkgPSAwOwogICAgZm9yIGYgaW4gZmlsZV9uYW1lcyB7CiAgICAgICAgbGV0IGNvbnRlbnRzID0gZnM6OnJlYWRfdG9fc3RyaW5nKGYpCiAgICAgICAgICAgIC5leHBlY3QoIlNob3VsZCBoYXZlIGJlZW4gYWJsZSB0byByZWFkIHRoZSBmaWxlIik7CgogICAgICAgIC8vIHNhbml0aXplIGZpZWxkcyBhbmQgYXR0cmlidXRlcyBzdGFydGluZyB3aXRoIGFuIHVuZGVyc2NvcmUKICAgICAgICBsZXQgcmVnZXggPSBSZWdleDo6bmV3KHIjIigiXHcrIlxzPzpccz8iKV8oXHcrIikiIykudW53cmFwKCk7CiAgICAgICAgbGV0IHNhbml0aXplZF9hYmlfZmlsZSA9IHJlZ2V4LnJlcGxhY2VfYWxsKGNvbnRlbnRzLmFzX3N0cigpLCAiJHsxfXVfJHsyfSIpOwoKICAgICAgICAvLyBzYW5pdGl6ZSBmaWVsZHMgYW5kIGF0dHJpYnV0ZXMgd2l0aCBtdWx0aXBsZSBjb25zZWN1dGl2ZSB1bmRlcnNjb3JlcwogICAgICAgIGxldCByZSA9IFJlZ2V4OjpuZXcociJfKyIpLnVud3JhcCgpOwoKICAgICAgICBsZXQgcmVfc2FuaXRpemVkX2FiaV9maWxlID0gcmUucmVwbGFjZV9hbGwoJnNhbml0aXplZF9hYmlfZmlsZSwgfGNhcHM6ICZyZWdleDo6Q2FwdHVyZXN8IHsKICAgICAgICAgICAgICAgIGxldCBjb3VudCA9IGNhcHNbMF0ubGVuKCk7CiAgICAgICAgICAgICAgICBsZXQgcmVwbGFjZW1lbnQgPSBmb3JtYXQhKCJ7fV8iLCAiX3UiLnJlcGVhdChjb3VudCAtIDEpKTsKICAgICAgICAgICAgICAgIHJlcGxhY2VtZW50CiAgICAgICAgfSk7CgogICAgICAgIEFiaWdlbjo6ZnJvbV9ieXRlcygiQ29udHJhY3QiLCByZV9zYW5pdGl6ZWRfYWJpX2ZpbGUuYXNfYnl0ZXMoKSk/CiAgICAgICAgICAgIC5nZW5lcmF0ZSgpPwogICAgICAgICAgICAud3JpdGVfdG9fZmlsZShmaWxlX291dHB1dF9uYW1lc1tpXSk/OwoKICAgICAgICBpID0gaSsxOwogICAgfQoKICAgIE9rKCgpKQp9Cg==",
      "proto/contract.proto": "",
      "rust-toolchain.toml": "W3Rvb2xjaGFpbl0KY29tcG9uZW50cyA9IFsgInJ1c3RmbXQiIF0KdGFyZ2V0cyA9IFsgIndhc20zMi11bmtub3duLXVua25vd24iIF0K",
      "src/abi/mod.rs": "CnB1YiBtb2QgYmF5Y19jb250cmFjdDsK",
      "src/lib.rs": "",
      "src/pb/mod.rs": "Ly8gQGdlbmVyYXRlZApwdWIgbW9kIGNvbnRyYWN0IHsKICAgIC8vIEBAcHJvdG9jX2luc2VydGlvbl9wb2ludChhdHRyaWJ1dGU6Y29udHJhY3QudjEpCiAgICBwdWIgbW9kIHYxIHsKICAgICAgICBpbmNsdWRlISgiY29udHJhY3QudjEucnMiKTsKICAgICAgICAvLyBAQHByb3RvY19pbnNlcnRpb25fcG9pbnQoY29udHJhY3QudjEpCiAgICB9Cn0K",
      "substreams.yaml": "c3BlY1ZlcnNpb246IHYwLjEuMApwYWNrYWdlOgogIG5hbWU6IGJheWMKICB2ZXJzaW9uOiB2MC4xLjAKCnByb3RvYnVmOgogIGZpbGVzOgogICAgLSBjb250cmFjdC5wcm90bwogIGltcG9ydFBhdGhzOgogICAgLSAuL3Byb3RvCiAgZXhjbHVkZVBhdGhzOgogICAgLSBzZi9zdWJzdHJlYW1zCiAgICAtIGdvb2dsZQoKYmluYXJpZXM6CiAgZGVmYXVsdDoKICAgIHR5cGU6IHdhc20vcnVzdC12MQogICAgZmlsZTogLi90YXJnZXQvd2FzbTMyLXVua25vd24tdW5rbm93bi9yZWxlYXNlL3N1YnN0cmVhbXMud2FzbQoKbW9kdWxlczoKCiAgLSBuYW1lOiBtYXBfZXZlbnRzCiAgICBraW5kOiBtYXAKICAgIGluaXRpYWxCbG9jazogMTIyODc1MDcKICAgIGlucHV0czoKICAgICAgLSBzb3VyY2U6IHNmLmV0aGVyZXVtLnR5cGUudjIuQmxvY2sKICAgIG91dHB1dDoKICAgICAgdHlwZTogcHJvdG86Y29udHJhY3QudjEuRXZlbnRzCiAgLSBuYW1lOiBtYXBfY2FsbHMKICAgIGtpbmQ6IG1hcAogICAgaW5pdGlhbEJsb2NrOiAxMjI4NzUwNwogICAgaW5wdXRzOgogICAgICAtIHNvdXJjZTogc2YuZXRoZXJldW0udHlwZS52Mi5CbG9jawogICAgb3V0cHV0OgogICAgICB0eXBlOiBwcm90bzpjb250cmFjdC52MS5DYWxscwogIC0gbmFtZTogbWFwX2V2ZW50c19jYWxscwogICAga2luZDogbWFwCiAgICBpbml0aWFsQmxvY2s6IDEyMjg3NTA3CiAgICBpbnB1dHM6CiAgICAgIC0gbWFwOiBtYXBfZXZlbnRzCiAgICAgIC0gbWFwOiBtYXBfY2FsbHMKICAgIG91dHB1dDoKICAgICAgdHlwZTogcHJvdG86Y29udHJhY3QudjEuRXZlbnRzQ2FsbHMKbmV0d29yazogbWFpbm5ldAo="
    }
  }
}