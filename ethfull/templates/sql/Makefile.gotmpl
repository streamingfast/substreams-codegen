LINK := $(shell curl -s https://api.github.com/repos/streamingfast/substreams-sink-sql/releases/latest | awk '/browser_download_url.*$(shell uname -s | tr "[:upper:]" "[:lower:]")_$(shell uname -m)/ {print $$2}' | sed 's/"//g')

.PHONY: get-sink-sql-binary
get-sink-sql-binary:
{{"\t"}}@echo "Downloading substreams-sink-sql binary..."
{{"\t"}}@mkdir -p bin
{{"\t"}}curl -L $(LINK) | tar zxf - -C bin
{{"\t"}}@rm -f bin/LICENSE
{{"\t"}}@rm -f bin/README.md
{{"\t"}}@echo "Download complete."

{{- if .FlavorIsPostgresSQL }}
DSN:="postgres://dev-node:insecure-change-me-in-prod@localhost:5432/dev-node?sslmode=disable"
{{- end }}
{{- if .FlavorIsClickHouse }}
DSN:="clickhouse://default:@localhost:9000/default"
{{- end }}

.PHONY: setup-sink
setup-sink:
{{"\t"}}@echo "Setting up substreams-sink-sql..."
{{"\t"}}./bin/substreams-sink-sql setup $(DSN) ./{{ .KebabName }}-v0.1.0.spkg

.PHONY: run-sink
run-sink:
{{"\t"}}@echo "Running substreams sink sql..."
{{- if .FlavorIsPostgresSQL }}
{{"\t"}}./bin/substreams-sink-sql run $(DSN) ./{{ .KebabName }}-v0.1.0.spkg
{{- end }}
{{- if .FlavorIsClickHouse }}
{{"\t"}}./bin/substreams-sink-sql run $(DSN) ./{{ .KebabName }}-v0.1.0.spkg --undo-buffer-size 12
{{- end }}

.PHONY: clean-local-data
clean-local-data:
{{"\t"}}@echo "Cleaning local data..."
{{"\t"}}if [ -d ./data/postgres ]; then
{{"\t"}}rm -rf ./data/postgres
{{"\t"}}fi
{{"\t"}}@echo "Local data cleaned."

{{- if .FlavorIsPostgresSQL }}
.PHONY: launch-postgresql-db
launch-postgresql-db:
{{"\t"}}@echo "Launching postgresql database..."
{{"\t"}}./dev-environment/start.sh
{{- end -}}

{{- if .FlavorIsClickHouse }}
.PHONY: launch-clickhouse-db
launch-clickhouse-db:
{{"\t"}}@echo "Launching clickhouse database..."
{{"\t"}}./dev-environment/start.sh
{{- end -}}

